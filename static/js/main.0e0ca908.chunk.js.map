{"version":3,"sources":["components/ingredient/index.tsx","components/drink-results/index.tsx","components/selected-drink/index.tsx","App.tsx","serviceWorker.js","index.tsx"],"names":["IngredientWrapper","styled","div","_templateObject","EMPTY_ITEM","components_ingredient","_ref","setSelectedCb","_useState","useState","_useState2","Object","slicedToArray","ingredientsOpts","setIngredientOpts","_useState3","_useState4","selectedIngredients","updateIngredients","useEffect","fetch","then","resp","json","data","drinks","map","item","strIngredient1","ingredients","concat","toConsumableArray","react_default","a","createElement","react","className","length","selected","i","ingredient_IngredientChooser","options","key","index","deleteCb","slice","updatedrinkCb","ingredient","newIngredients","onClick","IngredientChooser","_ref2","onChange","e","target","value","opt","Drink","name","img","id","selectDrink","src","drink_results","drinkResults","setDrinks","filter","indexOf","drink","replace","join","normalizeIngredients","Array","isArray","strDrink","strDrinkThumb","idDrink","drink_results_Drink","selected_drink","selectedDrink","drinkComponent","setDrinkCompontnt","console","log","selectedDrinkComponent","style","width","alt","directionsArray","measurement","push","getDirections","strInstructions","window","scrollTo","AppWrapper","App_templateObject","App","setSelected","setSelectDrink","esm","Provider","index_esm","selectedDrinks","drinkId","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0e0ca908.chunk.js","sourcesContent":["import React, { useEffect, useState, Fragment } from 'react';\nimport styled from 'styled-components';\n\nconst IngredientWrapper = styled.div`\n    display: block;\n    margin-bottom: 1rem;\n`;\n\nconst EMPTY_ITEM = '';\n\ninterface IngredientsProps {\n  setSelectedCb: any, // OMG fix MEEE\n  selectDrink: any,\n}\n\nexport default ({setSelectedCb} : IngredientsProps) => {\n  const [ingredientsOpts, setIngredientOpts] = useState<Array<string>>([]);\n  const [selectedIngredients, updateIngredients] = useState<Array<string>>(['']);\n\n  useEffect(() => {\n    fetch('https://www.thecocktaildb.com/api/json/v2/8673533/list.php?i=list')\n      .then(resp => resp.json())\n      .then((data: any) => data.drinks.map((item: any) => item.strIngredient1))\n      .then(ingredients => {\n        setIngredientOpts([EMPTY_ITEM, ...ingredients]);\n      });\n  }, []);\n\n  useEffect(() => {\n    setSelectedCb(selectedIngredients);\n  }, [selectedIngredients, setSelectedCb]);\n\n  return (\n    <Fragment>\n      <h1 className=\"mb-6 text-2xl border-b-2 border-gray-600 \">Ingredients</h1>\n      {ingredientsOpts.length > 0 && selectedIngredients.map((selected, i) => {\n        return <IngredientChooser\n          options={ingredientsOpts}\n          key={i}\n          index={i}\n          deleteCb={(index:number) => {\n            updateIngredients(\n              [...selectedIngredients.slice(0, index),\n              ...selectedIngredients.slice(index + 1)]\n            )\n          }}\n          selected={selected}\n          updatedrinkCb={(ingredient:string, i:number) => {\n            const newIngredients = selectedIngredients.slice(); // double check this is needed? feels bad, man\n            newIngredients[i] = ingredient;\n            updateIngredients(newIngredients)\n          }}\n        />\n        })}\n      <button\n        className=\"mt-6 block mb-6 bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 border border-blue-700 rounded\"\n        onClick={() => {\n          updateIngredients(selectedIngredients.concat(''));\n        }}\n      >\n        Add another ingredient!\n      </button>\n    </Fragment>\n  );\n};\n\ninterface IngredientProps {\n  options: Array<string>,\n  index: number,\n  deleteCb: any, // PLZ GOD FIX MEEEE\n  updatedrinkCb: any,\n  selected: string,\n}\n\nconst IngredientChooser = ({options, index, deleteCb, updatedrinkCb, selected}: IngredientProps) => {\n  return <IngredientWrapper>\n    <select onChange={e => updatedrinkCb(e.target.value, index)} value={selected}>\n      {options.map((opt:string, i:number) =>\n        (<option\n          className=\"bg-gray-600\"\n          value={opt}\n          key={i}>{opt}\n        </option>)\n      )}\n    </select>\n    <button\n      className=\"mt-6 bg-red-500 text-white px-2 ml-6 border border-red-600 rounded\"\n      onClick={() => deleteCb(index)}\n    >\n      Delete\n    </button>\n  </IngredientWrapper>\n}\n","import React, { useEffect, useState } from 'react';\n\nconst NONE_FOUND = 'None Found'\n\ninterface selectedIngredients {\n  selectedIngredients: Array<string>\n  selectDrink: any,\n}\n\ninterface DrinkInterface {\n  name: string,\n  img: string,\n  id: string,\n  selectDrink: any,\n}\n\nconst Drink = ({name, img, id, selectDrink} : DrinkInterface) => {\n  return <div\n      className=\"w-1/6 mb-4 p-6 cursor-pointer\"\n      onClick={() => selectDrink(id)}\n    >\n    <img className=\"rounded\" src={img} />\n    <p className=\"mt-3\">{name}</p>\n  </div>\n}\n\nexport default ({ selectedIngredients, selectDrink }: selectedIngredients) => {\n  // console.log(selectedIngredients);\n\n  const [drinkResults, setDrinks] = useState();\n\n  useEffect(() => {\n    fetch(`https://www.thecocktaildb.com/api/json/v2/8673533/filter.php?i=${normalizeIngredients(selectedIngredients)}`).then(resp => resp.json())\n      .then(data => {\n        if (Array.isArray(data.drinks)) {\n          setDrinks({drinks: data.drinks.map((drink:any) => {\n            return {\n              name: drink.strDrink,\n              img: drink.strDrinkThumb,\n              id: drink.idDrink,\n            }\n          })});\n        } else {\n          setDrinks(data);\n        }\n      });\n  }, [selectedIngredients]);\n\n  if (typeof drinkResults === 'undefined') {\n    return <p className=\"mt-6\">loading... 🍸</p>\n  }\n\n  if (drinkResults.drinks === NONE_FOUND) {\n    return <p className=\"mt-6\">none found ☹️</p>\n  }\n\n  return (\n    <div className=\"flex flex-wrap -mb-4\">\n      {drinkResults.drinks.map((drink:any, index:number) =>\n        <Drink\n          name={drink.name}\n          img={drink.img}\n          id={drink.id}\n          key={index}\n          selectDrink={selectDrink}\n        />\n      )}\n    </div>\n  )\n}\n\nfunction normalizeIngredients(drinks: Array<string>) {\n  if (drinks.length === 1 && drinks[0] === '') {\n    return '';\n  }\n  return drinks.filter((item, index) => drinks.indexOf(item) === index && item !== '')\n    .map(drink => drink.replace(/ /g, '_')).join(',');\n}\n","import React, { useState, useEffect } from 'react';\n\nexport default ({selectedDrink} : any) => {\n  let [drinkComponent, setDrinkCompontnt] = useState(selectedDrink);\n\n  useEffect(() => {\n    if (selectedDrink === null) {\n      setDrinkCompontnt(selectedDrink);\n      return;\n    }\n    fetch(`https://www.thecocktaildb.com/api/json/v2/8673533/lookup.php?i=${selectedDrink}`)\n      .then(resp => resp.json())\n      .then(data => {\n        const drink = data.drinks[0];\n        console.log(drink);\n        const selectedDrinkComponent = <div className=\"flex\">\n          <img className=\"mb-6 mr-6 rounded\" style={{width: '20%'}} src={drink.strDrinkThumb} alt=\"\"/>\n          <div className=\"flex-grow\">\n            <h2 className=\"text-4xl font-semibold\">{drink.strDrink}</h2>\n            {getDirections(drink)}\n            <p className=\"text-2xl\">{drink.strInstructions}</p>\n          </div>\n        </div>\n        setDrinkCompontnt(selectedDrinkComponent);\n        window.scrollTo(0, 0)\n      })\n  }, [selectedDrink]);\n\n\n  return selectedDrink === null ? selectedDrink : drinkComponent;\n}\n\n\nfunction getDirections(drink: any) {\n  const ingredientString = 'strIngredient';\n  const measurementString = 'strMeasure';\n  const directionsArray = [];\n  for (let i = 1; i <= 15; i++) {\n    if (drink[`${ingredientString}${i}`] !== '') {\n      const measurement = drink[`${measurementString}${i}`];\n      const ingredient = drink[`${ingredientString}${i}`];\n      directionsArray.push(`${measurement} — ${ingredient}`);\n    } else {\n      break;\n    }\n  }\n  return <ul className=\"my-6\">\n    {directionsArray.map((item, i) => <li key={i}>{item}</li>)}\n  </ul>;\n}\n","import React, { Fragment, useState } from 'react';\nimport styled from 'styled-components';\nimport { IconContext } from 'react-icons';\nimport { FaCocktail } from 'react-icons/fa';\nimport Ingredients from './components/ingredient';\nimport DrinkResults from './components/drink-results';\nimport SelectedDrink from './components/selected-drink';\n\nimport './App.css';\n\n\nconst AppWrapper = styled.div`\n  // text-align: center;\n  // background-color: red;\n`\n\nfunction App() {\n\n  const [selectedIngredients, setSelected] = useState<Array<string>>([]);\n  const [selectedDrink, setSelectDrink] = useState<number | null>(null);\n\n  return (\n    <Fragment>\n      <nav className=\"flex items-center justify-between flex-wrap color-bg-blue p-2\">\n        <div className=\"flex items-center flex-shrink-0 text-white mr-6\">\n          <div className=\"pr-2\">\n            <IconContext.Provider value={{ className: \"pr-3 text-4xl\" }}>\n              <div>\n                <FaCocktail />\n              </div>\n            </IconContext.Provider>\n          </div>\n          <span className=\"font-semibold text-xl tracking-tight inline-block align-baseline\">Schorr Should Drink</span>\n        </div>\n      </nav>\n      <AppWrapper className=\"container mx-auto pt-6\">\n        <SelectedDrink selectedDrink={selectedDrink} />\n        <Ingredients\n          setSelectedCb={(selectedDrinks:Array<string>) => {\n            setSelected(selectedDrinks)\n          }}\n          selectDrink={(drinkId:number) => console.log(drinkId)}\n        />\n        <DrinkResults selectedIngredients={selectedIngredients} selectDrink={setSelectDrink}/>\n      </AppWrapper>\n    </Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport './styles/tailwind.css';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}