{"version":3,"sources":["services/index.tsx","components/ingredient/index.tsx","components/drink-results/index.tsx","components/selected-drink/index.tsx","App.tsx","serviceWorker.js","index.tsx"],"names":["API_ROOT","IngredientWrapper","styled","div","_templateObject","components_ingredient","_ref","setSelectedCb","_useState","useState","_useState2","Object","slicedToArray","ingredientsOpts","setIngredientOpts","_useState3","_useState4","selectedIngredients","updateIngredients","useEffect","cb","fetch","concat","then","resp","json","drinkResponse","drinks","map","item","strIngredient1","sort","a","b","localeCompare","drinkIngredientsArray","toConsumableArray","react_default","createElement","react","className","length","selected","i","ingredient_IngredientChooser","options","key","index","deleteCb","slice","updatedrinkCb","ingredient","newIngredients","onClick","IngredientChooser","_ref2","onChange","e","target","value","opt","Drink","name","img","id","selectDrink","window","scrollTo","src","alt","drink_results","matchingDrinks","drinkResults","setDrink","role","aria-label","drink","drink_results_Drink","ImgWrapper","selected_drink_templateObject","selected_drink","selectedDrink","style","maxWidth","strDrinkThumb","strDrink","directionsArray","measurement","push","getDirections","strInstructions","cache","App","setSelectedIngredients","setSelectDrink","_useState5","_useState6","returnedDrinks","setRetunedDrinks","filter","join","hasOwnProperty","ingredients","indexOf","replace","data","Array","isArray","idDrink","fetchCocktails","matchingCocktails","console","log","esm","Provider","index_esm","response","drinkId","fetchCocktail","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"iSAEMA,EAAQ,uKCGd,IAAMC,EAAoBC,IAAOC,IAAVC,KASRC,EAAA,SAAAC,GAAyC,IAAtCC,EAAsCD,EAAtCC,cAAsCC,EACTC,mBAAwB,CAAC,KADhBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAC/CK,EAD+CH,EAAA,GAC9BI,EAD8BJ,EAAA,GAAAK,EAELN,mBAAwB,CAAC,KAFpBO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAE/CE,EAF+CD,EAAA,GAE1BE,EAF0BF,EAAA,GAYtD,OARAG,oBAAU,WDbL,IAA2BC,ICcZN,EDbpBO,MAAK,GAAAC,OAAItB,EAAJ,oBACFuB,KAAK,SAAAC,GAAI,OAAIA,EAAKC,SAClBF,KAAK,SAACG,GACL,OAAOA,EAAcC,OAClBC,IAAI,SAACC,GAAD,OAAeA,EAAKC,iBACxBC,KAAK,SAACC,EAAWC,GAAZ,OAA0BD,EAAEE,cAAcD,OACjDV,KAAK,SAACY,GACPf,EAAE,CAAE,IAAFE,OAAAX,OAAAyB,EAAA,EAAAzB,CAASwB,QCOZ,IAEHhB,oBAAU,WACRZ,EAAcU,IACb,CAACA,IAGFoB,EAAAL,EAAAM,cAACC,EAAA,SAAD,KACEF,EAAAL,EAAAM,cAAA,MAAIE,UAAU,6CAAd,eACC3B,EAAgB4B,OAAS,GACxBxB,EAAoBW,IAAI,SAACc,EAAUC,GACjC,OACEN,EAAAL,EAAAM,cAACM,EAAD,CACEC,QAAShC,EACTiC,IAAKH,EACLI,MAAOJ,EACPK,SAAU,SAACD,GACT7B,EAAiB,GAAAI,OAAAX,OAAAyB,EAAA,EAAAzB,CACZM,EAAoBgC,MAAM,EAAGF,IADjBpC,OAAAyB,EAAA,EAAAzB,CAEZM,EAAoBgC,MAAMF,EAAQ,OAGzCL,SAAUA,EACVQ,cAAe,SAACC,EAAoBR,GAClC,IAAMS,EAAiBnC,EAAoBgC,QAC3CG,EAAeT,GAAKQ,EACpBjC,EAAkBkC,QAK5Bf,EAAAL,EAAAM,cAAA,UACEE,UAAU,8GACVa,QAAS,WACPnC,EAAkBD,EAAoBK,OAAO,OAHjD,6BAoBAgC,EAAoB,SAAAC,GAMH,IALrBV,EAKqBU,EALrBV,QACAE,EAIqBQ,EAJrBR,MACAC,EAGqBO,EAHrBP,SACAE,EAEqBK,EAFrBL,cACAR,EACqBa,EADrBb,SAEA,OACEL,EAAAL,EAAAM,cAACrC,EAAD,KACEoC,EAAAL,EAAAM,cAAA,UACEkB,SAAU,SAAAC,GAAC,OAAIP,EAAcO,EAAEC,OAAOC,MAAOZ,IAC7CY,MAAOjB,EACPF,UAAU,0BAETK,EAAQjB,IAAI,SAACgC,EAAajB,GAAd,OACXN,EAAAL,EAAAM,cAAA,UAAQE,UAAU,cAAcmB,MAAOC,EAAKd,IAAKH,GAC9CiB,MAIPvB,EAAAL,EAAAM,cAAA,UACEE,UAAU,qEACVa,QAAS,kBAAML,EAASD,KAF1B,YC3EAc,EAAQ,SAAAvD,GAAmD,IAAjDwD,EAAiDxD,EAAjDwD,KAAMC,EAA2CzD,EAA3CyD,IAAKC,EAAsC1D,EAAtC0D,GAAIC,EAAkC3D,EAAlC2D,YAC7B,OAAO5B,EAAAL,EAAAM,cAAA,OACHE,UAAU,uCACVa,QAAS,WACPa,OAAOC,SAAS,EAAG,GACnBF,EAAYD,KAGhB3B,EAAAL,EAAAM,cAAA,OAAKE,UAAU,UAAU4B,IAAKL,EAAKM,IAAI,gBACvChC,EAAAL,EAAAM,cAAA,KAAGE,UAAU,2BAA2BsB,KAI7BQ,EAAA,SAAAf,GAA+D,IAA5DgB,EAA4DhB,EAA5DgB,eAAgBN,EAA4CV,EAA5CU,YAA4CzD,EAC3CC,qBAD2CC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACrEgE,EADqE9D,EAAA,GACvD+D,EADuD/D,EAAA,GAO5E,OAJAS,oBAAU,WACNsD,EAASF,IACV,CAACA,IAEwB,qBAAjBC,EACFnC,EAAAL,EAAAM,cAAA,KAAGE,UAAU,QAAb,cAA+BH,EAAAL,EAAAM,cAAA,QAAMoC,KAAK,MAAMC,aAAW,cAA5B,iBAnCvB,eAsCbH,EAAa7C,OACRU,EAAAL,EAAAM,cAAA,KAAGE,UAAU,QAAb,cAA+BH,EAAAL,EAAAM,cAAA,QAAMoC,KAAK,MAAMC,aAAW,YAA5B,uBAGtCtC,EAAAL,EAAAM,cAAA,OAAKE,UAAU,wBACZ+B,EAAe9B,OAAS,GAAK8B,EAAe3C,IAAI,SAACgD,EAAW7B,GAAZ,OAC/CV,EAAAL,EAAAM,cAACuC,EAAD,CACEf,KAAMc,EAAMd,KACZC,IAAKa,EAAMb,IACXC,GAAIY,EAAMZ,GACVlB,IAAKC,EACLkB,YAAaA,iKC9CvB,IAAMa,EAAa5E,IAAOC,IAAV4E,KAQDC,EAAA,SAAA1E,GAA8D,IAA5D2E,EAA4D3E,EAA5D2E,cACf,OAAsB,OAAlBA,EAA+B,KAEjC5C,EAAAL,EAAAM,cAAA,OAAKE,UAAU,QACfH,EAAAL,EAAAM,cAACwC,EAAD,CAAYtC,UAAU,QACpBH,EAAAL,EAAAM,cAAA,OAAKE,UAAU,eAAe0C,MAAO,CAACC,SAAU,QAASf,IAAKa,EAAcG,cAAef,IAAI,MAEjGhC,EAAAL,EAAAM,cAAA,OAAKE,UAAU,aACbH,EAAAL,EAAAM,cAAA,MAAIE,UAAU,qCAAqCyC,EAAcI,UAOvE,SAAuBT,GAIrB,IAHA,IAEMU,EAAkB,GACf3C,EAAI,EAAGA,GAAK,IACsB,KAArCiC,EAAK,GAAAtD,OAJc,iBAIdA,OAAuBqB,IADTA,IAAK,CAE1B,IAAM4C,EAAcX,EAAK,GAAAtD,OAJH,cAIGA,OAAwBqB,IAC3CQ,EAAayB,EAAK,GAAAtD,OANH,iBAMGA,OAAuBqB,IAC/C2C,EAAgBE,KAAhB,GAAAlE,OAAwBiE,EAAxB,YAAAjE,OAAyC6B,IAK7C,OAAOd,EAAAL,EAAAM,cAAA,MAAIE,UAAU,QAClB8C,EAAgB1D,IAAI,SAACC,EAAMc,GAAP,OAAaN,EAAAL,EAAAM,cAAA,MAAIQ,IAAKH,GAAId,MApB5C4D,CAAcR,GACf5C,EAAAL,EAAAM,cAAA,KAAGE,UAAU,yBAAyByC,EAAcS,8BCXpDC,EAAkD,GA+DzCC,MA7Df,WAAe,IAAApF,EACyCC,mBAA+B,MADxEC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACNS,EADMP,EAAA,GACemF,EADfnF,EAAA,GAAAK,EAE2BN,mBAAqB,MAFhDO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAENkE,EAFMjE,EAAA,GAES8E,EAFT9E,EAAA,GAAA+E,EAG8BtF,mBAA+B,IAH7DuF,EAAArF,OAAAC,EAAA,EAAAD,CAAAoF,EAAA,GAGNE,EAHMD,EAAA,GAGUE,EAHVF,EAAA,GAqBb,OAhBA7E,oBAAU,WACR,GAA4B,OAAxBF,EAAJ,CAEA,IAAM6B,EAAM7B,EAAoBkF,OAAO,SAAAxD,GAAC,MAAU,KAALA,IAASyD,KAAK,IACvDT,EAAMU,eAAevD,GACvBoD,EAAiBP,EAAM7C,IJEtB,SAAwBwD,EAA4BlF,GA2B3D,IAA8BO,EA1B5BN,MAAK,GAAAC,OAAItB,EAAJ,kBAAAsB,QA0BuBK,EA1B2B2E,EA2BjC,IAAlB3E,EAAOc,QAA8B,KAAdd,EAAO,GACzB,GAEFA,EAAOwE,OAAO,SAACtE,EAAMkB,GAAP,OAAiBpB,EAAO4E,QAAQ1E,KAAUkB,GAAkB,KAATlB,IACrED,IAAI,SAAAgD,GAAK,OAAIA,EAAM4B,QAAQ,KAAM,OAAMJ,KAAK,QA/BwB7E,KAAK,SAAAC,GAAI,OAAIA,EAAKC,SACtFF,KAAK,SAAAkF,GACAC,MAAMC,QAAQF,EAAK9E,QACrBP,EAAGqF,EAAK9E,OAAOC,IAAI,SAACgD,GAElB,MAAO,CACLd,KAAMc,EAAMS,SACZtB,IAAKa,EAAMQ,cACXpB,GAAIY,EAAMgC,YAIdxF,EAAGqF,KIbLI,CAAe5F,EAAqB,SAAC6F,GACnCnB,EAAM7C,GAAOgE,EACbZ,EAAiBY,GACjBC,QAAQC,IAAIrB,OAIf,CAAC1E,IAGFoB,EAAAL,EAAAM,cAACC,EAAA,SAAD,KACEF,EAAAL,EAAAM,cAAA,OAAKE,UAAU,iEACbH,EAAAL,EAAAM,cAAA,OAAKE,UAAU,mDACbH,EAAAL,EAAAM,cAAA,OAAKE,UAAU,QACbH,EAAAL,EAAAM,cAAC2E,EAAA,EAAYC,SAAb,CAAsBvD,MAAO,CAAEnB,UAAW,kBACxCH,EAAAL,EAAAM,cAAA,WACED,EAAAL,EAAAM,cAAC6E,EAAA,EAAD,SAIN9E,EAAAL,EAAAM,cAAA,QAAME,UAAU,oEAAhB,wBAEFH,EAAAL,EAAAM,cAAA,WACED,EAAAL,EAAAM,cAAA,UACEE,UAAU,8JACVa,QAAS,kBJPajC,EIOW,SAACwD,GAChCkB,EAAelB,SJP3BvD,MAAK,GAAAC,OAAItB,EAAJ,gBAA2BuB,KAAK,SAAAC,GAAI,OAAIA,EAAKC,SACjDF,KAAK,SAAA6F,GAAQ,OAAIA,EAASzF,OAAO,KACjCJ,KAAKH,GAHD,IAA2BA,IIKxB,eAMciB,EAAAL,EAAAM,cAAA,QAAMqC,aAAW,eAAeD,KAAK,OAArC,aAIlBrC,EAAAL,EAAAM,cAAA,OAAKE,UAAU,+BACbH,EAAAL,EAAAM,cAAC0C,EAAD,CAAeC,cAAeA,IAC9B5C,EAAAL,EAAAM,cAACjC,EAAD,CACEE,cAAe,SAACU,GACd4E,EAAuB5E,MAG3BoB,EAAAL,EAAAM,cAACgC,EAAD,CACEC,eAAgB0B,EAChBhC,YAAa,SAACoD,GAAD,OJnDhB,SAAuBA,EAAgBjG,GAC5CC,MAAK,GAAAC,OAAItB,EAAJ,kBAAAsB,OAA6B+F,IAC/B9F,KAAK,SAAAC,GAAI,OAAIA,EAAKC,SAClBF,KAAK,SAAAkF,GACJ,IAAM7B,EAAQ6B,EAAK9E,OAAO,GAC1BP,EAAGwD,KI8CmC0C,CAAcD,EAASvB,SCxD/CyB,QACW,cAA7BrD,OAAOsD,SAASC,UAEe,UAA7BvD,OAAOsD,SAASC,UAEhBvD,OAAOsD,SAASC,SAASC,MACvB,2DCTNC,IAASC,OAAOvF,EAAAL,EAAAM,cAACuF,EAAD,MAASC,SAASC,eAAe,SDwH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM3G,KAAK,SAAA4G,GACjCA,EAAaC,eCnHnBrB,QAAQC,IAAI","file":"static/js/main.9ab4cbf9.chunk.js","sourcesContent":["import { DrinkResponse } from '../interfaces/drink-interface';\n\nconst API_ROOT = `https://www.thecocktaildb.com/api/json/v2/8673533/`\n\n\nexport function getIngredientList(cb: (drinkIngredientsArray: Array<string>) => void) {\n  fetch(`${API_ROOT}list.php?i=list`)\n    .then(resp => resp.json())\n    .then((drinkResponse: DrinkResponse) => {\n      return drinkResponse.drinks\n        .map((item: any) => item.strIngredient1)\n        .sort((a: string, b: string) => a.localeCompare(b))\n    }).then((drinkIngredientsArray) => {\n      cb(['', ...drinkIngredientsArray])\n    });\n}\n\nexport function fetchCocktail(drinkId:number, cb: (selectedIngredients: any) => void) {\n  fetch(`${API_ROOT}/lookup.php?i=${drinkId}`)\n    .then(resp => resp.json())\n    .then(data => {\n      const drink = data.drinks[0];\n      cb(drink);\n    });\n}\n\nexport function fetchCocktails(ingredients: Array<string>, cb: (matchingCocktails: Array<string>) => void) {\n  fetch(`${API_ROOT}/filter.php?i=${normalizeIngredients(ingredients)}`).then(resp => resp.json())\n    .then(data => {\n      if (Array.isArray(data.drinks)) {\n        cb(data.drinks.map((drink:any) => {\n          // console.log(drink)\n          return {\n            name: drink.strDrink,\n            img: drink.strDrinkThumb,\n            id: drink.idDrink,\n          }\n        }));\n      } else {\n        cb(data);\n      }\n    });\n}\n\nexport function getRandomCocktail(cb: <T>(drink: T) => void) {\n  fetch(`${API_ROOT}/random.php`).then(resp => resp.json())\n  .then(response => response.drinks[0])\n  .then(cb);\n}\n\n/*\n * Helpers\n */\nfunction normalizeIngredients(drinks: Array<string>) {\n  if (drinks.length === 1 && drinks[0] === '') {\n    return '';\n  }\n  return drinks.filter((item, index) => drinks.indexOf(item) === index && item !== '')\n    .map(drink => drink.replace(/ /g, '_')).join(',');\n}\n","import React, { useEffect, useState, Fragment } from 'react'\nimport styled from 'styled-components'\n\nimport { getIngredientList } from '../../services';\n\nconst IngredientWrapper = styled.div`\n  display: block;\n  margin-bottom: 1rem;\n`\n\ninterface IngredientsProps {\n  setSelectedCb: (cb: Array<string>) => void\n}\n\nexport default ({ setSelectedCb }: IngredientsProps) => {\n  const [ingredientsOpts, setIngredientOpts] = useState<Array<string>>([''])\n  const [selectedIngredients, updateIngredients] = useState<Array<string>>([''])\n\n  useEffect(() => {\n    getIngredientList(setIngredientOpts);\n  }, [])\n\n  useEffect(() => {\n    setSelectedCb(selectedIngredients)\n  }, [selectedIngredients])\n\n  return (\n    <Fragment>\n      <h1 className=\"mb-6 text-2xl border-b-2 border-gray-600 \">Ingredients</h1>\n      {ingredientsOpts.length > 0 &&\n        selectedIngredients.map((selected, i) => {\n          return (\n            <IngredientChooser\n              options={ingredientsOpts}\n              key={i}\n              index={i}\n              deleteCb={(index: number) => {\n                updateIngredients([\n                  ...selectedIngredients.slice(0, index),\n                  ...selectedIngredients.slice(index + 1),\n                ])\n              }}\n              selected={selected}\n              updatedrinkCb={(ingredient: string, i: number) => {\n                const newIngredients = selectedIngredients.slice() // double check this is needed? feels bad, man\n                newIngredients[i] = ingredient\n                updateIngredients(newIngredients)\n              }}\n            />\n          )\n        })}\n      <button\n        className=\"mt-6 block mb-6 bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 border border-blue-700 rounded\"\n        onClick={() => {\n          updateIngredients(selectedIngredients.concat(''))\n        }}\n      >\n        Add another ingredient!\n      </button>\n    </Fragment>\n  )\n}\n\ninterface IngredientProps {\n  options: Array<string>\n  index: number\n  deleteCb: (index:number) => void\n  updatedrinkCb: (targetValue: string, index:number) => void\n  selected: string\n}\n\nconst IngredientChooser = ({\n  options,\n  index,\n  deleteCb,\n  updatedrinkCb,\n  selected,\n}: IngredientProps) => {\n  return (\n    <IngredientWrapper>\n      <select\n        onChange={e => updatedrinkCb(e.target.value, index)}\n        value={selected}\n        className=\"border border-blue-800\"\n      >\n        {options.map((opt: string, i: number) => (\n          <option className=\"bg-gray-600\" value={opt} key={i}>\n            {opt}\n          </option>\n        ))}\n      </select>\n      <button\n        className=\"mt-6 bg-red-500 text-white px-2 ml-6 border border-red-600 rounded\"\n        onClick={() => deleteCb(index)}\n      >\n        Delete\n      </button>\n    </IngredientWrapper>\n  )\n}\n","import React, { useEffect, useState } from 'react';\n\nconst NONE_FOUND = 'None Found'\n\ninterface selectedIngredientsProps {\n  matchingDrinks: any,\n  selectDrink: any,\n}\n\ninterface DrinkInterface {\n  name: string,\n  img: string,\n  id: string,\n  selectDrink: any,\n}\n\nconst Drink = ({name, img, id, selectDrink} : DrinkInterface) => {\n  return <div\n      className=\"w-1/6 mb-4 p-2 lg:p-6 cursor-pointer\"\n      onClick={() => {\n        window.scrollTo(0, 0);\n        selectDrink(id)\n      }}\n    >\n    <img className=\"rounded\" src={img} alt=\"some drink!\" />\n    <p className=\"mt-3 text-xs md:text-lg\">{name}</p>\n  </div>\n}\n\nexport default ({ matchingDrinks, selectDrink }: selectedIngredientsProps) => {\n  const [drinkResults, setDrink] = useState();\n\n  useEffect(() => {\n      setDrink(matchingDrinks);\n  }, [matchingDrinks]);\n\n  if (typeof drinkResults === 'undefined') {\n    return <p className=\"mt-6\">loading... <span role=\"img\" aria-label=\"hawt drink\">🍸</span></p>\n  }\n\n  if (drinkResults.drinks === NONE_FOUND) {\n    return <p className=\"mt-6\">none found <span role=\"img\" aria-label=\"sad face\">️😦</span></p>\n  }\n  return (\n    <div className=\"flex flex-wrap -mb-4\">\n      {matchingDrinks.length > 0 && matchingDrinks.map((drink:any, index:number) =>\n        <Drink\n          name={drink.name}\n          img={drink.img}\n          id={drink.id}\n          key={index}\n          selectDrink={selectDrink}\n        />\n      )}\n    </div>\n  )\n}\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport DrinkInterface from '../../interfaces/drink-interface';\n\nconst ImgWrapper = styled.div`\n    flex: 0 0 60%;\n    @media (min-width: 768px) {\n      flex: 0 0 30%;\n    }\n`;\n\n\nexport default ({selectedDrink} : {selectedDrink: null | DrinkInterface}) => {\n  if (selectedDrink === null) return null;\n  return (\n    <div className=\"flex\">\n    <ImgWrapper className=\"mr-6\">\n      <img className=\"mb-6 rounded\" style={{maxWidth: '100%'}} src={selectedDrink.strDrinkThumb} alt=\"\"/>\n    </ImgWrapper>\n    <div className=\"flex-grow\">\n      <h2 className=\"text-xl md:text-4xl font-semibold\">{selectedDrink.strDrink}</h2>\n      {getDirections(selectedDrink)}\n      <p className=\"text-base md:text-2xl\">{selectedDrink.strInstructions}</p>\n    </div>\n  </div>);\n}\n\nfunction getDirections(drink: DrinkInterface)  {\n  const ingredientString = 'strIngredient';\n  const measurementString = 'strMeasure';\n  const directionsArray = [];\n  for (let i = 1; i <= 15; i++) {\n    if (drink[`${ingredientString}${i}`] !== '') {\n      const measurement = drink[`${measurementString}${i}`];\n      const ingredient = drink[`${ingredientString}${i}`];\n      directionsArray.push(`${measurement} — ${ingredient}`);\n    } else {\n      break;\n    }\n  }\n  return <ul className=\"my-6\">\n    {directionsArray.map((item, i) => <li key={i}>{item}</li>)}\n  </ul>;\n}\n","import React, { Fragment, useState, useEffect } from 'react';\nimport { IconContext } from 'react-icons';\nimport { FaCocktail } from 'react-icons/fa';\nimport Ingredients from './components/ingredient';\nimport DrinkResults from './components/drink-results';\nimport SelectedDrink from './components/selected-drink';\n\nimport { fetchCocktail, fetchCocktails, getRandomCocktail } from './services';\nimport { DrinkResponse } from './interfaces/drink-interface';\n\nimport './App.css';\n\nconst cache:{ [index:string] : Array<DrinkResponse> } = {};\n\nfunction App() {\n  const [selectedIngredients, setSelectedIngredients] = useState<Array<string> | null>(null);\n  const [selectedDrink, setSelectDrink] = useState<any | null>(null);\n  const [returnedDrinks, setRetunedDrinks] = useState<Array<DrinkResponse>>([]);\n\n  useEffect(() => {\n    if (selectedIngredients === null) return;\n    // cachedDrinkCachedFetch(selectedIngredients);\n    const key = selectedIngredients.filter(i =>  i!== '').join('');\n    if (cache.hasOwnProperty(key)) {\n      setRetunedDrinks(cache[key]);\n    } else {\n      fetchCocktails(selectedIngredients, (matchingCocktails: any) => {\n        cache[key] = matchingCocktails;\n        setRetunedDrinks(matchingCocktails);\n        console.log(cache);\n      });\n    }\n\n  }, [selectedIngredients]);\n\n  return (\n    <Fragment>\n      <nav className=\"flex items-center justify-between flex-wrap color-bg-blue p-2\">\n        <div className=\"flex items-center flex-shrink-0 text-white mr-6\">\n          <div className=\"pr-2\">\n            <IconContext.Provider value={{ className: \"pr-3 text-4xl\" }}>\n              <div>\n                <FaCocktail />\n              </div>\n            </IconContext.Provider>\n          </div>\n          <span className=\"font-semibold text-xl tracking-tight inline-block align-baseline\">Schorr Should Drink</span>\n        </div>\n        <div>\n          <button\n            className=\"inline-block text-sm px-4 py-2 leading-none border rounded text-white border-white hover:border-transparent hover:text-teal-500 hover:bg-white mt-4 lg:mt-0\"\n            onClick={() => getRandomCocktail((drink) => {\n              setSelectDrink(drink);\n            })}\n            >\n            Surprise me <span aria-label=\"sparkles, yo\" role=\"img\">✨</span>\n          </button>\n        </div>\n      </nav>\n      <div className=\"container mx-auto pt-6 px-2\">\n        <SelectedDrink selectedDrink={selectedDrink} />\n        <Ingredients\n          setSelectedCb={(selectedIngredients: Array<string>) => {\n            setSelectedIngredients(selectedIngredients)\n          }}\n        />\n        <DrinkResults\n          matchingDrinks={returnedDrinks}\n          selectDrink={(drinkId: number) => fetchCocktail(drinkId, setSelectDrink)}\n        />\n      </div>\n    </Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport './styles/tailwind.css';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\nconsole.log('lets drink 🍸🍹👋😎')\n"],"sourceRoot":""}