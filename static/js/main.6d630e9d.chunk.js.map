{"version":3,"sources":["components/ingredient/index.tsx","components/drink-results/index.tsx","components/selected-drink/index.tsx","App.tsx","serviceWorker.js","index.tsx"],"names":["IngredientWrapper","styled","div","_templateObject","EMPTY_ITEM","components_ingredient","_ref","setSelectedCb","_useState","useState","_useState2","Object","slicedToArray","ingredientsOpts","setIngredientOpts","_useState3","_useState4","selectedIngredients","updateIngredients","useEffect","fetch","then","resp","json","data","drinks","map","item","strIngredient1","sort","a","b","localeCompare","ingredients","concat","toConsumableArray","react_default","createElement","react","className","length","selected","i","ingredient_IngredientChooser","options","key","index","deleteCb","slice","updatedrinkCb","ingredient","newIngredients","onClick","IngredientChooser","_ref2","onChange","e","target","value","opt","Drink","name","img","id","selectDrink","window","scrollTo","src","drink_results","matchingDrinks","drinkResults","setDrink","drink","drink_results_Drink","selected_drink","selectedDrink","style","width","strDrinkThumb","alt","strDrink","directionsArray","measurement","push","getDirections","strInstructions","API_BASE","AppWrapper","App_templateObject","App","setSelectedIngredients","setSelectDrink","_useState5","_useState6","returnedDrinks","setRetunedDrinks","cb","matchingCocktails","filter","indexOf","replace","join","Array","isArray","idDrink","esm","Provider","index_esm","random","aria-label","role","selectedDrinks","drinkId","fetchCocktail","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","log"],"mappings":"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","file":"static/js/main.6d630e9d.chunk.js","sourcesContent":["import React, { useEffect, useState, Fragment } from 'react';\nimport styled from 'styled-components';\n\nconst IngredientWrapper = styled.div`\n    display: block;\n    margin-bottom: 1rem;\n`;\n\nconst EMPTY_ITEM = '';\n\ninterface IngredientsProps {\n  setSelectedCb: any, // OMG fix MEEE\n  // selectDrink: any,\n}\n\nexport default ({setSelectedCb} : IngredientsProps) => {\n  const [ingredientsOpts, setIngredientOpts] = useState<Array<string>>([]);\n  const [selectedIngredients, updateIngredients] = useState<Array<string>>(['']);\n\n  useEffect(() => {\n    fetch('https://www.thecocktaildb.com/api/json/v2/8673533/list.php?i=list')\n      .then(resp => resp.json())\n      .then((data: any) => data.drinks.map((item: any) => item.strIngredient1).sort((a:string, b:string) => a.localeCompare(b)))\n      .then(ingredients => {\n        setIngredientOpts([EMPTY_ITEM, ...ingredients]);\n      });\n  }, []);\n\n  useEffect(() => {\n    setSelectedCb(selectedIngredients);\n  }, [selectedIngredients]);\n\n  return (\n    <Fragment>\n      <h1 className=\"mb-6 text-2xl border-b-2 border-gray-600 \">Ingredients</h1>\n      {ingredientsOpts.length > 0 && selectedIngredients.map((selected, i) => {\n        return <IngredientChooser\n          options={ingredientsOpts}\n          key={i}\n          index={i}\n          deleteCb={(index:number) => {\n            updateIngredients(\n              [...selectedIngredients.slice(0, index),\n              ...selectedIngredients.slice(index + 1)]\n            )\n          }}\n          selected={selected}\n          updatedrinkCb={(ingredient:string, i:number) => {\n            const newIngredients = selectedIngredients.slice(); // double check this is needed? feels bad, man\n            newIngredients[i] = ingredient;\n            updateIngredients(newIngredients)\n          }}\n        />\n        })}\n      <button\n        className=\"mt-6 block mb-6 bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 border border-blue-700 rounded\"\n        onClick={() => {\n          updateIngredients(selectedIngredients.concat(''));\n        }}\n      >\n        Add another ingredient!\n      </button>\n    </Fragment>\n  );\n};\n\ninterface IngredientProps {\n  options: Array<string>,\n  index: number,\n  deleteCb: any, // PLZ GOD FIX MEEEE\n  updatedrinkCb: any,\n  selected: string,\n}\n\nconst IngredientChooser = ({options, index, deleteCb, updatedrinkCb, selected}: IngredientProps) => {\n  return <IngredientWrapper>\n    <select onChange={e => updatedrinkCb(e.target.value, index)} value={selected}>\n      {options.map((opt:string, i:number) =>\n        (<option\n          className=\"bg-gray-600\"\n          value={opt}\n          key={i}>{opt}\n        </option>)\n      )}\n    </select>\n    <button\n      className=\"mt-6 bg-red-500 text-white px-2 ml-6 border border-red-600 rounded\"\n      onClick={() => deleteCb(index)}\n    >\n      Delete\n    </button>\n  </IngredientWrapper>\n}\n","import React, { useEffect, useState } from 'react';\n\nconst NONE_FOUND = 'None Found'\n\ninterface selectedIngredientsProps {\n  matchingDrinks: any,\n  selectDrink: any,\n}\n\ninterface DrinkInterface {\n  name: string,\n  img: string,\n  id: string,\n  selectDrink: any,\n}\n\nconst Drink = ({name, img, id, selectDrink} : DrinkInterface) => {\n  return <div\n      className=\"w-1/6 mb-4 p-6 cursor-pointer\"\n      onClick={() => {\n        window.scrollTo(0, 0);\n        selectDrink(id)\n      }}\n    >\n    <img className=\"rounded\" src={img} />\n    <p className=\"mt-3\">{name}</p>\n  </div>\n}\n\nexport default ({ matchingDrinks, selectDrink }: selectedIngredientsProps) => {\n  const [drinkResults, setDrink] = useState();\n\n  useEffect(() => {\n      setDrink(matchingDrinks);\n  }, [matchingDrinks]);\n\n  if (typeof drinkResults === 'undefined') {\n    return <p className=\"mt-6\">loading... 🍸</p>\n  }\n\n  if (drinkResults.drinks === NONE_FOUND) {\n    return <p className=\"mt-6\">none found ☹️</p>\n  }\n  return (\n    <div className=\"flex flex-wrap -mb-4\">\n      {matchingDrinks.length > 0 && matchingDrinks.map((drink:any, index:number) =>\n        <Drink\n          name={drink.name}\n          img={drink.img}\n          id={drink.id}\n          key={index}\n          selectDrink={selectDrink}\n        />\n      )}\n    </div>\n  )\n}\n","import React from 'react';\n\nexport default ({selectedDrink} : any) => {\n  if (selectedDrink === null) return null;\n  return (\n    <div className=\"flex\">\n    <img className=\"mb-6 mr-6 rounded\" style={{width: '20%'}} src={selectedDrink.strDrinkThumb} alt=\"\"/>\n    <div className=\"flex-grow\">\n      <h2 className=\"text-4xl font-semibold\">{selectedDrink.strDrink}</h2>\n      {getDirections(selectedDrink)}\n      <p className=\"text-2xl\">{selectedDrink.strInstructions}</p>\n    </div>\n  </div>);\n\n}\n\nfunction getDirections(drink: any) {\n  const ingredientString = 'strIngredient';\n  const measurementString = 'strMeasure';\n  const directionsArray = [];\n  for (let i = 1; i <= 15; i++) {\n    if (drink[`${ingredientString}${i}`] !== '') {\n      const measurement = drink[`${measurementString}${i}`];\n      const ingredient = drink[`${ingredientString}${i}`];\n      directionsArray.push(`${measurement} — ${ingredient}`);\n    } else {\n      break;\n    }\n  }\n  return <ul className=\"my-6\">\n    {directionsArray.map((item, i) => <li key={i}>{item}</li>)}\n  </ul>;\n}\n","import React, { Fragment, useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { IconContext } from 'react-icons';\nimport { FaCocktail } from 'react-icons/fa';\nimport Ingredients from './components/ingredient';\nimport DrinkResults from './components/drink-results';\nimport SelectedDrink from './components/selected-drink';\n\nimport './App.css';\n\nconst API_BASE = 'https://www.thecocktaildb.com/api/json/v2/8673533';\n\nconst AppWrapper = styled.div`\n  // text-align: center;\n  // background-color: red;\n`\n\nfunction App() {\n\n  const [selectedIngredients, setSelectedIngredients] = useState<Array<string>>(['']);\n  const [selectedDrink, setSelectDrink] = useState<any | null>(null);\n  const [returnedDrinks, setRetunedDrinks] = useState([]);\n\n  useEffect(() => {\n    fetchCocktails(selectedIngredients, (matchingCocktails: any) => {\n      setRetunedDrinks(matchingCocktails);\n    });\n  }, [selectedIngredients]);\n\n  return (\n    <Fragment>\n      <nav className=\"flex items-center justify-between flex-wrap color-bg-blue p-2\">\n        <div className=\"flex items-center flex-shrink-0 text-white mr-6\">\n          <div className=\"pr-2\">\n            <IconContext.Provider value={{ className: \"pr-3 text-4xl\" }}>\n              <div>\n                <FaCocktail />\n              </div>\n            </IconContext.Provider>\n          </div>\n          <span className=\"font-semibold text-xl tracking-tight inline-block align-baseline\">Schorr Should Drink</span>\n        </div>\n        <div>\n          <button\n            className=\"inline-block text-sm px-4 py-2 leading-none border rounded text-white border-white hover:border-transparent hover:text-teal-500 hover:bg-white mt-4 lg:mt-0\"\n            onClick={() => getRandomCocktail((random:any) => {\n              const drink = random.drinks[0];\n              setSelectDrink(drink);\n            })}\n            >\n            Surprise me <span aria-label=\"sparkles, yo\" role=\"img\">✨</span>\n          </button>\n        </div>\n      </nav>\n      <AppWrapper className=\"container mx-auto pt-6\">\n        <SelectedDrink selectedDrink={selectedDrink} />\n        <Ingredients\n          setSelectedCb={(selectedDrinks: Array<string>) => {\n            setSelectedIngredients(selectedDrinks)\n          }}\n        />\n        <DrinkResults\n          matchingDrinks={returnedDrinks}\n          selectDrink={(drinkId: number) => fetchCocktail(drinkId, setSelectDrink)}\n        />\n      </AppWrapper>\n    </Fragment>\n  );\n}\n\nfunction fetchCocktail(drinkId:number, cb:any) {\n  fetch(`${API_BASE}/lookup.php?i=${drinkId}`)\n    .then(resp => resp.json())\n    .then(data => {\n      const drink = data.drinks[0];\n      cb(drink);\n    });\n}\n\nfunction fetchCocktails(ingredients: Array<string>, cb: any) {\n  fetch(`${API_BASE}/filter.php?i=${normalizeIngredients(ingredients)}`).then(resp => resp.json())\n    .then(data => {\n      if (Array.isArray(data.drinks)) {\n        cb(data.drinks.map((drink:any) => {\n          return {\n            name: drink.strDrink,\n            img: drink.strDrinkThumb,\n            id: drink.idDrink,\n          }\n        }));\n      } else {\n        cb(data);\n      }\n    });\n}\n\nfunction getRandomCocktail(cb:any) {\n  fetch(`${API_BASE}/random.php`).then(resp => resp.json())\n  .then(cb);\n}\n\nfunction normalizeIngredients(drinks: Array<string>) {\n  if (drinks.length === 1 && drinks[0] === '') {\n    return '';\n  }\n  return drinks.filter((item, index) => drinks.indexOf(item) === index && item !== '')\n    .map(drink => drink.replace(/ /g, '_')).join(',');\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport './styles/tailwind.css';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\nconsole.log('lets drink 🍸🍹👋😎')\n"],"sourceRoot":""}